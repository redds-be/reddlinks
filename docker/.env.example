###############
# BASE CONFIG #
###############

## TLS
## Although reddlinks is expected to run behind a reverse proxy that handles TLS,
## this feature can be used to run reddlinks as a standalone web server
## Change the value of REDDLINKS_TLS_ENABLED to true to enable TLS
## <path to cert>: Path to a SSL/TLS certificate (Changing this value is not recommended when using docker unless you modify the volumes accordingly in docker-compose.yml (right side))
## <path to key>: Path to the certificate's key (Changing this value is not recommended when using docker unless you modify the volumes accordingly in docker-compose.yml (right side))
## <port for https>: Port used for https (make it 8443 if you use docker regardless of the real port you are using unless you modify the volumes accordingly in docker-compose.yml (right side))
REDDLINKS_TLS_ENABLED=false
REDDLINKS_TLS_CERT=cert.crt
REDDLINKS_TLS_KEY=key.key
REDDLINKS_TLS_PORT=8443

## Port on which the server will run on (make it 8080 if you use docker regardless of the real port you are using unless you modify the volumes accordingly in docker-compose.yml (right side)):
REDDLINKS_PORT=8080

## Set some defaults:
## <default length>: the default length for auto-generated path
## <default max length>: the default max length for auto-generated path
## <default max custom short length>: the default max length for a custom path
## <default expiry time in minutes>: the default expiry time in minutes for a url
REDDLINKS_DEF_SHORT_LENGTH=<default length>
REDDLINKS_MAX_SHORT_LENGTH=<default max length>
REDDLINKS_MAX_CUSTOM_SHORT_LENGTH=<default max custom short length>
REDDLINKS_DEF_EXPIRY_TIME=<default expiry time in minutes>

## Name and FQDN of the instance:
## <name>: Name of the instance.
## <http/https>: either http or https, though https is recommended. ex: https://example.com (if REDDLINKS_TLS_ENABLED is true, please use https)
## <sub.domain.tld>: FQDN of the instance. ex: https://links.example.com
## <:port>: If accessible by any other port than 443 or 80, specify it. ex: https://links.example.com:8080
## The ending / is required making it look like: https://links.example.com/ or https://links.example.com:8080/ depending on the port/FQDN.
REDDLINKS_INSTANCE_NAME=<name>
REDDLINKS_INSTANCE_URL=<http/https>://<sub.domain.tld><:port>/

## Contact email
## Using an obfuscated address with symbol substitution is recommended to avoid spam.
## Example: <first part> AT <domain name> DOT <TLD> = contact AT example DOT com = contact@example.com
#REDDLINKS_CONTACT_EMAIL=<email address>

###################
# DATABASE CONFIG #
###################

## <postgres username>: Postgres user username.
## <postgres user password>: The postgres user's very secret and complicated password (can be a hash if postgres is configured for it).
## <postgres host>: The host on which postgres runs on can be 'localhost' or a unix socket if running locally.
## <postgres port>: The port of the postgres server, by default, the port is 5432.
## <postgres database>: The name of your postgres database.
## For more details or examples, please check this documentation: <https://www.postgresql.org/docs/14/libpq-connect.html#id-1.7.3.8.3.6>
REDDLINKS_PG_USER=rluser
REDDLINKS_PG_PASS=
REDDLINKS_PG_DB=rldb
REDDLINKS_DB_TYPE=postgres
REDDLINKS_DB_STRING=postgres://$REDDLINKS_PG_USER:$REDDLINKS_PG_PASS@postgresql:5432/$REDDLINKS_PG_DB?sslmode=disable

## Time between database cleanup in minutes, 1 for 1 minute, 60 for 1 hour, 120 for 2 hours, ...
REDDLINKS_TIME_BETWEEN_DB_CLEANUPS=<time in minutes>
